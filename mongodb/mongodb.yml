---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb-pvc
  namespace: api-auth
spec:
  #  https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mongodb
  namespace: api-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          # https://hub.docker.com/_/mongo
          image: mongo
          args: [ "--dbpath","/data/db" ]
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
              exec:
                command:
                  - mongo
                  - --disableImplicitSessions
                  - --eval
                  - "db.adminCommand('ping')"
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 6
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: pass1234
          volumeMounts:
            - mountPath: /data/db
              name: database
          resources:
            limits:
              cpu: '2'
              memory: '512Mi'
            requests:
              cpu: '500m'
              memory: '256Mi'
      volumes:
        - name: database
          persistentVolumeClaim:
            claimName: mongodb-pvc

---
kind: Service
apiVersion: v1
metadata:
  name: mongodb
  namespace: api-auth
spec:
  # Will allow to connect to a node port.
  # For example:
  # mongosh "mongodb://192.168.59.102:31717" --username root --password pass1234
  # to get the node ip, use: minikube node list
  # to get the node port, use: kubectl get services mongodb
  type: NodePort
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongodb